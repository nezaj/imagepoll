import Head from "next/head";
import { useState } from "react";
import Image from "next/image";

function UploadedImage({ url, isPriority, onClick, orderedVotes }) {
  const order = orderedVotes && orderedVotes[url];
  return (
    <div className="py-2" onClick={onClick}>
      <div className="relative w-80 h-80">
        <Image
          src={url}
          priority={isPriority}
          layout="fill"
          objectFit="contain"
        />
        {order && (
          <div className="absolute px-8 py-6 rounded-full text-center bg-sky-500/[0.5] text-2xl">
            {order}
          </div>
        )}
      </div>
    </div>
  );
}

function updateSelection(votes, maxVotes, newVote) {
  const idx = votes.indexOf(newVote);
  if (idx > -1) {
    return votes.filter((v) => v !== newVote);
  }
  return votes.concat(newVote).slice(0, maxVotes);
}

function arrToOrderedMap(arr) {
  return arr.reduce((xs, x, idx) => {
    xs[x] = idx + 1;
    return xs;
  }, {});
}

const images = [
  ["/images/arch.jpg", true],
  ["/images/grass.jpg", true],
  ["/images/bw.jpg", true],
  ["/images/sit.jpg", false],
  ["/images/cafe.jpg", false],
  ["/images/fancy.jpg", false],
];

const genders = ["F", "M", "NB"];

export default function Vote() {
  const [votes, setVotes] = useState([]);
  const [name, setName] = useState("");
  const [gender, setGender] = useState(genders[0]);
  const [age, setAge] = useState(null);
  const maxVotes = 5;
  const orderedVotes = arrToOrderedMap(votes);
  const canSubmit = name && gender && age;
  const canSubmitClass = canSubmit
    ? "outline outline-2"
    : "bg-slate-500/[0.1] text-black/[0.2]";
  return (
    <div>
      <Head>
        <title>Image Poll</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="mx-auto max-w-lg p-4 flex flex-col items-center">
        <div className="text-2xl py-4">Image Poll</div>
        <p>Choose up to {maxVotes} pictures </p>
        {images.map(([url, isPriority]) => (
          <UploadedImage
            key={url}
            url={url}
            isPriority={isPriority}
            orderedVotes={orderedVotes}
            onClick={() => setVotes(updateSelection(votes, maxVotes, url))}
          />
        ))}
        <div className="py-4 flex">
          <div className="text-lg w-48 py-2">Name</div>
          <input
            type="text"
            value={name}
            placeholder="Jane Doe"
            onChange={(e) => setName(e.target.value)}
            className="outline outline-2 w-32 p-2 text-right"
          />
        </div>
        <div className="py-4 flex">
          <div className="text-lg w-16 py-2">Gender</div>
          <span className="w-64 text-right">
            {genders.map((g) => {
              const selectedClass = g === gender ? "bg-sky-500/[0.5]" : "";
              return (
                <button
                  key={g}
                  className={`outline outline-2 ml-4 py-2 px-4 text-center ${selectedClass}`}
                  onClick={() => setGender(g)}
                >
                  {g}
                </button>
              );
            })}
          </span>
        </div>
        <div className="py-4 flex">
          <div className="text-lg flex-1 w-64 py-2">Age</div>
          <input
            type="number"
            min="1"
            max="120"
            placeholder="30"
            value={age}
            onChange={(e) => setAge(e.target.value)}
            className="outline outline-2 w-16 p-2 text-right"
          />
        </div>
        <button
          disabled={!canSubmit}
          className={`mt-4 px-16 py-4 ${canSubmitClass}`}
        >
          Submit Votes
        </button>
      </div>
    </div>
  );
}
